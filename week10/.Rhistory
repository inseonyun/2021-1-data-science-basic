list(c(3,4), 3.14, 'A', matrix(1:6, ncol=3))
lt1 = list(c(3,4), 3.14, 'A', matrix(1:6, ncol=3))
lt1
lt1[3]
lt1[4]
lt1[4][2]
lt1[4][1]
lt1[4][1][1]
lt1[1]
lt1[c(2,3)]
lt1
str(lt1[1])
str(lt1[c(2:3)])
lt1[c(F,F,T,T)]
lt1[[1]]
str(lt1[[1]])
lt1[[4]]
####리스트는 비어있는 리스트 생성 가능
lt=list()
lt
lt[1] = c(1:4)
lt[1]
####리스트는 비어있는 리스트 생성 가능
lt=list()
c(T,F)
c(T,1)
c(1,3.14)
c(3+4i, T)
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt = list()
c(lt, list('A'))
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt = list()
c(lt, list('A'))
c(lt, list('B'))
lt
lt = c(lt, list('A'))
lt = c(lt, list('B'))
lt
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt1 = list()
lt1 = c(lt1, list('A'))
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt1 = list()
lt2 = c(lt1, list('A'))
lt2 = c(lt1, list('B'))
lt2
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt1 = list()
lt2 = c(lt1, list('A'))
c(lt2, list('B'))
lt3 = c(lt2, list('B'))
c(lt3, 'C')
#리스트의 이름을 이용하여 원소 더하기
lt1 = list()
lt1[[1]] = c(3,6)
lt1
lt1[[3]] = 'A'
lt1
lt1[[2]]
lt1= list()
lt1$one = c(4,5)
lt1
lt1$two = 3.14
lt1
lt1[[one]]
lt1[one]
lt1[$one]
lt1['one']
lt1[1]
lt1[['three']] = 3
lt1['four'] = 4
str(lt1[[4]])
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt1 = list()
lt2 = c(lt1, list('A'))
lt3 = c(lt2, list('B'))
c(lt3, 'C') #리스트에 벡터를 더해도 리스트로 바껴서 결합 됨, 묵시적 형변환
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt1 = list()
lt2 = c(lt1, list('A'))
lt3 = c(lt2, list('B'))
lt3[[3]] = 'C'
lt3
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt1 = list()
lt2 = c(lt1, list('A'))
lt3 = c(lt2, list('B'))
c(lt3, c('C','B'))
#컨테이너도 확장이 됨(벡터와 리스트 -> 리스트)
lt1 = list()
lt2 = c(lt1, list('A'))
lt3 = c(lt2, list('B'))
c(lt3, list(c('C','B')))
lt1 = list(c(3,4), 3.14, 'A', matrix(1:6, ncol=3))
#리스트 인덱스 접근
lt1[1] #첫번째 리스트 원소 접근
lt1[c(2,3)] #두번째 세번째 리스트 원소 접근
